# .NET Desktop
# Build and run tests for .NET Desktop or Windows classic desktop solutions.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/windows/dot-net

trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  prerelease: true

steps:
- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  enabled: false
  inputs:
    restoreSolution: '$(solution)'

- task: DownloadSecureFile@1
  name: privateKey
  displayName: Download
  inputs:
    secureFile: 'BigSolution.snk'
    retryCount: 5

- task: DotNetCoreCLI@2
  inputs:
    command: 'build'
    arguments: '-p:DelaySign=false;AssemblyOriginatorKeyFile=$(privateKey.secureFilePath);Prerelease=$(prerelease);Configuration=Release;GeneratePackageOnBuild=true'

- task: DotNetCoreCLI@2
  inputs:
    command: 'test'

- task: VSBuild@1
  enabled: false
  inputs:
    solution: '$(solution)'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'
    msbuildArgs: /property:DelaySign=false;AssemblyOriginatorKeyFile=$(privateKey.secureFilePath);Prerelease=$(prerelease);Configuration=Release;GeneratePackageOnBuild=true

- task: VSTest@2
  enabled: false
  displayName: Testing
  inputs:
    platform: '$(buildPlatform)'

- task: CopyFiles@2
  inputs:
    SourceFolder: '$(agent.builddirectory)'
    Contents: '**\bin\**'
    TargetFolder: '$(build.artifactstagingdirectory)'
    CleanTargetFolder: true
    OverWrite: true

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'
