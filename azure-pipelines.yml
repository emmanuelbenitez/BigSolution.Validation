# .NET Desktop
# Build and run tests for .NET Desktop or Windows classic desktop solutions.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/windows/dot-net
name: $(TeamProject)_$(BuildDefinitionName)_$(SourceBranchName)_$(Date:yyyyMMdd)$(Rev:.r)
trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  test: $[Date:yyyyMMdd]
  test1: '$[Date:yyyyMMdd]'

steps:
- task: CmdLine@2
  inputs:
    script: |
      echo $(test)
      echo $(test1)
- task: NuGetToolInstaller@1

- task: DownloadSecureFile@1
  name: privateKey
  displayName: GetPrivateKey
  inputs:
    secureFile: 'BigSolution.snk'

- task: DotNetCoreCLI@2
  displayName: Restore
  inputs:
    command: 'restore'
    feedsToUse: 'select'
    vstsFeed: '1b04fa51-ab33-4e2a-9966-fc900bcff434'
    includeNuGetOrg: false
    verbosityPack: Normal

- task: DotNetCoreCLI@2
  displayName: Build
  inputs:
    command: 'build'
    arguments: '-p:DelaySign=false;AssemblyOriginatorKeyFile=$(privateKey.secureFilePath);Prerelease=$(prerelease);Build=$(versionBuild);Revision=$(versionRevision);Configuration=Release;GeneratePackageOnBuild=true --norestore'

- task: DotNetCoreCLI@2
  displayName: Run Tests
  inputs:
    command: 'test'

- task: CopyFiles@2
  inputs:
    SourceFolder: '$(agent.builddirectory)'
    Contents: '**\*.*nupkg'
    flattenFolders: true
    TargetFolder: '$(build.artifactstagingdirectory)'
    CleanTargetFolder: true
    OverWrite: true

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'packages'
    publishLocation: 'Container'
